git commant

1>> git init
2>>git config --global user.name "saurabh"
3>>git config --global user.email "shaheil8saurav@gmail.com"
4>>git add .
5>>git status
6>>git --help
git init -> initialize an existing directory as a Git repository

git config --global user.name "akshat"   (set a name that is identifiable for credit when review version history)

git config --global user.email "akshu20791@gmail.com"   (set an email address that will be associated with each history marker)

git config --list   (to see the configuration of your git) 
 
git add .  (add all files as it looks now to your next commit (stage))

use "git rm --cached <file>..." to unstage)

git add [file] (add a file as it looks now to your next commit (stage))

git commit -m " first commit"

Git log 

git remote add origin <<central git url>>

git push -u origin master    (use username and personal authentication key )


git diff - tell you the difference between your last commited files and the changes you made in the file 

git status -> tell you the status of the files

git branch -> list your branches. a * will appear next to the currently active branch

git branch [branch-name]

git stash -> Save modified and staged changes

git clone [url] -> retrieve an entire repository from a hosted location via URL 

################### IGNORE SINGLE  FILE ########################################


22) touch .gitignore  	(this is the file where you would be putting the files which you want to ignore)
23) touch users.log  
24) cat >>.gitignore
users.log        	
press ctrl + D to exit
25) git add .gitignore	(putting the .gitignore into the staging area)
26) git commit -m"created .gitignore file"
27) cat >>users.log
akshat logged in
press ctrl + D to exit
28) git status	(you will see that users.log is not been tracked because we have ignored it)
############################################################################

